#!groovy

@Library("Infrastructure")

String product = "probate"
String component = "business-service"

List<LinkedHashMap<String, Object>> secrets = [
    secret('probatePersistenceUrl', 'TEST_PERSISTENCE_URL'),
    secret('probateNotifyMobile', 'TEST_MOBILE'),
    secret('serviceAuthProviderBaseUrl', 'SERVICE_AUTH_PROVIDER_BASE_URL'),
    secret('userAuthProviderOauth2Url', 'USER_AUTH_PROVIDER_OAUTH2_URL'),
    secret('evidenceManagementUrl', 'EVIDENCE_MANAGEMENT_URL'),
    secret('idamUserId', 'IDAM_USER_ID'),
    secret('s2sAuthTotpSecret', 'S2S_AUTH_TOTP_SECRET'),
    secret('pdfservice-url', 'TEST_PDFSERVICE_URL')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("java", product, component) {
  loadVaultSecrets(secrets)
  //enableSlackNotifications('#probate-jenkins')
  after('test') {
    // try {
    //   sh './gradlew pitest'
    // } finally {
    //   steps.archiveArtifacts "build/reports/pitest/**/*.*"
    // }
  
    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/tests/test",
            reportFiles          : "index.html",
            reportName           : "sol-ccd-service Test Report"
    ]

    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/jacoco",
            reportFiles          : "index.html",
            reportName           : "sol-ccd-service Code Coverage Report"
    ]

    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/findbugs",
            reportFiles          : "main.html",
            reportName           : "sol-ccd-service find Bugs Report"
    ]
  }

}
