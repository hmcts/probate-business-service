#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

//noinspection GroovyAssignabilityCheck
properties([
		parameters([
			choice(name: 'ENVIRONMENT', choices: 'sandbox\nsaat\nsprod', description: 'Environment where code should be build and deployed')
		])
])


String product = "probate"
String component = "business-service"

List<LinkedHashMap<String, Object>> secrets = [
    secret('probatePersistenceUrl', 'TEST_PERSISTENCE_URL'),
    secret('probateNotifyMobile', 'TEST_MOBILE'),
    secret('probate-notify-invite-apikey', 'PRO_SERVICES_NOTIFY_APIKEY'),
    secret('business-services-notify-invitedata-templateId', 'PRO_SERVICES_NOTIFY_INVITEDATA_TEMPLATEID'),
    secret('business-services-notify-pin-templateId', 'PRO_SERVICES_NOTIFY_PIN_TEMPLATEID'),
    secret('s2sAuthTotpSecret', 'S2S_AUTH_TOTP_SECRET')

]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withParameterizedPipeline('java', product, component, params.ENVIRONMENT, 'sandbox') {
  env.PACT_BROKER_URL = "http://pact-broker.service.core-compute-saat.internal/"
  loadVaultSecrets(secrets)
  after ('build') {
    try {
        sh './gradlew contract'
        sh './gradlew pactPublish'
    } catch(err) {
       steps.archiveArtifacts "build/reports/tests/contract/**/*"
    }
      finally {
        steps.archiveArtifacts "target/pacts/*.*"
    }
  }

  after('test') {
    junit 'build/test-results/test/**/*.xml'
    archiveArtifacts 'build/reports/tests/test/index.html'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/tests/test",
            reportFiles          : "index.html",
            reportName           : "probate-submit-service Test Report"
    ]

    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/jacoco",
            reportFiles          : "index.html",
            reportName           : "probate-submit-service Code Coverage Report"
    ]

    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/findbugs",
            reportFiles          : "main.html",
            reportName           : "probate-submit-service find Bugs Report"
    ]
  }

  after('functionalTest:saat') {
      publishHTML target: [
              reportDir            : "target/site/serenity/",
              reportFiles          : "index.html",
              reportName           : "SAAT Functional Tests",
              alwaysLinkToLastBuild: true
      ]
  }

  after('functionalTest:aat') {
      publishHTML target: [
              reportDir            : "target/site/serenity/",
              reportFiles          : "index.html",
              reportName           : "AAT Functional Tests",
              alwaysLinkToLastBuild: true
      ]
  }

  after('functionalTest:spreview') {
      publishHTML target: [
              reportDir            : "target/site/serenity/",
              reportFiles          : "index.html",
              reportName           : "Preview Functional Tests",
              alwaysLinkToLastBuild: true
      ]
  }
}
